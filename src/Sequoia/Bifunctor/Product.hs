module Sequoia.Bifunctor.Product
( -- * Product type
  type (Ã—)(..)
) where

import Data.Bifunctor

-- Product type

newtype a Ã— b = P { getP :: forall t . (a -> b -> t) -> t }
  deriving (Functor)

infixr 7 Ã—

instance Bifunctor (Ã—) where
  bimap f g (P p) = P (\ lr -> p (\ l r -> lr (f l) (g r)))
